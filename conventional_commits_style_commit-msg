#!/bin/sh

branch="$(git rev-parse --abbrev-ref HEAD)";
commit_regex='((CDW\-)([1-9][0-9]*)|((feat|fix|chore|refactor|style|test|docs)(\((\w{0,15})\))?))(\:.*\S.*)';
error_msg="Aborting commit. Your commit message format is invalid, please check the references."
commit_message="$1";
reference_msg="
# Semantic Commit Messages

See how a minor change to your commit message style can make you a better programmer.

Format: <type>(<scope>): <subject>

<scope> is optional

## Example

feat: add hat wobble
^--^  ^------------^
|     |
|     +-> Summary in present tense.
|
+-------> Type: chore, docs, feat, fix, refactor, style, or test.

 Examples:

- feat: (new feature for the user, not a new feature for build script)
- fix: (bug fix for the user, not a fix to a build script)
- docs: (changes to the documentation)
- style: (formatting, missing semi colons, etc; no production code change)
- refactor: (refactoring production code, eg. renaming a variable)
- test: (adding missing tests, refactoring tests; no production code change)
- chore: (updating grunt tasks etc; no production code change)

"

if ! grep -qE "$commit_regex" "$1"; then
echo "$reference_msg"
    echo -e "$error_msg" >&2
    exit 1
fi

if [ "$branch" = "master" ]; then
echo "You can't commit directly to master branch"
exit 1
fi

if [ "$branch" = "develop" ]; then
echo "You can't commit directly to develop branch"
exit 1
fi
